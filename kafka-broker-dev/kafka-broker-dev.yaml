apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kafka-broker-dev
  template:
    metadata:
      labels:
        app: kafka-broker-dev
    spec:
      containers:
      - name: kafka-broker-dev
        image: apache/kafka:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9092
          name: app-port
        resources:
          limits:
            memory: "4Gi"
            cpu: "4000m"
          requests:
            memory: "2Gi"
            cpu: "2000m"
        env:
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_LISTENERS
          value: "CONTROLLER://:9093,PLAINTEXT_HOST://:9092"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://localhost:9092"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "1@localhost:9093"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_NUM_PARTITIONS
          value: "3"
        - name: KAFKA_MESSAGE_MAX_BYTES
          value: "2000000000"  # 2 GB
        - name: KAFKA_REPLICA_FETCH_MAX_BYTES
          value: "2000000000"  # 2 GB
        - name: KAFKA_MAX_REQUEST_SIZE
          value: "2000000000"  # 2 GB
---
apiVersion: v1
kind: Service
metadata:
  namespace: kafka-broker-ns
  name: kafka-broker-dev
spec:
  type: LoadBalancer
  selector:
    app: kafka-broker-dev
  ports:
    - protocol: TCP
      port: 9092
      targetPort: app-port